class Solution {
    public int lengthOfLongestSubstring(String s) {
        Set<Character> set = new HashSet<>();
        int result = 0;
        for(int i=0;i<s.length();i++){
            int count =0;
            set.clear();
            for(int j=i;j<s.length();j++){
                 set.add(s.charAt(j));
                 if(set.size()-1 != count){
                    result = Math.max(result,set.size());
                    break;
                 }
                 count++;
            }
            result = Math.max(result,set.size());
        }
        return result;
    }
}
________________________________________________________________________________
optimize Solution

class Solution {
    public int lengthOfLongestSubstring(String s) {
        Set<Character> set = new HashSet<>();
        int ei=0,si=0;
        int result =0;
        while(s.length()!=ei){
            while(set.contains(s.charAt(ei))){
                set.remove(s.charAt(si));
                si++;
            }
           set.add(s.charAt(ei));
            result = Math.max(result,set.size());
           ei++;
        }
        return result;
    }
}
