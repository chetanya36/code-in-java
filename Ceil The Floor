class Solve {
    Pair getFloorAndCeil(int[] arr, int n, int x) {
        Arrays.sort(arr);
        int Floor,Ceil;
        int min = arr[0];
        int max = arr[n-1];
            for(int i=0;i<n;i++)
            {
               if(arr[i]<=x && arr[i]>=min)
               {
                   min = arr[i];
               }
               if(arr[i]>=x && arr[i]<=max)
               {
                   max = arr[i];
               }
            }
            Floor = min;
            Ceil = max;
             if(arr[0]>x){
            Floor=-1;
             }
            
        if(arr[n-1]<x)
        {
        Ceil = -1;
        }
        return new Pair(Floor,Ceil);
    }
}


Description
Given an unsorted array Arr[] of N integers and an integer X, find floor and ceiling of X in Arr[0..N-1].
Floor of X is the largest element which is smaller than or equal to X. Floor of X doesn’t exist if X is smaller than smallest element of Arr[]
Ceil of X is the smallest element which is greater than or equal to X. Ceil of X doesn’t exist if X is greater than greatest element of Arr[]
N = 8, X = 7
Arr[] = {5, 6, 8, 9, 6, 5, 5, 6}
Output: 6 8
