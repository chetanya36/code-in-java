class Solution
{
    public int[][] searchWord(char[][] grid, String word)
    {
        // Code here
        ArrayList<ArrayList<Integer>> list1  = new ArrayList<>();
        int row[] = {1,-1,-1,1,0,0,1,-1};
        int col[] = {1,-1,1,-1,1,-1,0,0};
        int len_row = grid.length;
        int len_col = grid[0].length;
        for(int i=0;i<len_row;i++)
        {
            for(int j=0;j<len_col;j++)
            {
                int n =0;
                ArrayList<Integer> list = new ArrayList<>();
                outerloop:
                if(grid[i][j] == word.charAt(0))
                {
                    while(n!=8)
                    {
                        String str = "";
                        int x = i;
                        int y = j;
                        int w_len = word.length();
                        int temp =0;
                        while(w_len!=0)
                        {
                            if(x<len_row && y<len_col && x>=0 && y>=0 )
                            {
                                if(grid[x][y] == word.charAt(temp))
                                {
                                    str = str+word.charAt(temp);
                                }
                            }
                            x = x+row[n];
                            y = y+col[n];
                            temp++;
                            w_len--;
                           if(str.equals(word))
                          {
                            list.add(i);
                            list.add(j);
                            list1.add(list);
                            break outerloop;
                          }
                        }
                        
                        n++;
                    }
                }
            }
        }
        int arr[][] = new int[list1.size()][2];
        for(int i=0;i<list1.size();i++)
        {
            arr[i][0] = list1.get(i).get(0);
            arr[i][1]  = list1.get(i).get(1);
        }
        return arr;
    }
}
