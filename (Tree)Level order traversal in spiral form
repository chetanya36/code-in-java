class Spiral
{
    //Function to return a list containing the level order 
    //traversal in spiral form.	
    ArrayList<Integer> findSpiral(Node root) 
    {
        ArrayList<Integer> List = new ArrayList<>();
        if(root ==null)
        return List;
        Stack<Node> stack1 = new Stack<>();
        Stack<Node> stack2 = new Stack<>();
        stack1.add(root);
       while(!stack1.isEmpty() || !stack2.isEmpty())
       {
           while(!stack1.isEmpty())
           {
               Node currNode = stack1.pop();
               List.add(currNode.data);
               if(currNode.right!=null)
              {
                stack2.add(currNode.right);
              }
              if(currNode.left!=null)
              {
                stack2.add(currNode.left);
              }
           }
          
           while(!stack2.isEmpty())
           {
               Node currNode = stack2.pop();
               List.add(currNode.data);
               if(currNode.left!=null)
              {
                stack1.add(currNode.left);
              }
               if(currNode.right!=null)
              {
                stack1.add(currNode.right);
              }
           }
       }
       return List;
        
    }
}
