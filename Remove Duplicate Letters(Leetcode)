import java.util.*;
class Solution {
    public String removeDuplicateLetters(String s) {
        String str = "";
        int freq[] = new int[26];
        int n = s.length();
        for(int i=0;i<n;i++)
        {
           freq[s.charAt(i)-'a']++;
        }
        boolean visited[] = new boolean[26];
        Stack<Character> st = new Stack<>();
        for(int i=0;i<n;i++)
        {
            int flag =0;
           if(st.isEmpty())
           {
              st.push(s.charAt(i));
              freq[s.charAt(i)-'a']--;
              visited[s.charAt(i)-'a'] = true;
           }
           else
           {
               while(!st.isEmpty() && st.peek()>=s.charAt(i) && visited[s.charAt(i)-'a'] == false)
               {
                  char ch = st.peek();
                  if(freq[ch-'a']>0)
                  {
                     st.pop();
                     visited[ch-'a'] = false;
                  }
                  else
                    break;
                }
                if(visited[s.charAt(i)-'a'] == false)
                {
                    st.push(s.charAt(i));
                    //  freq[s.charAt(i)-'a']--;
                   visited[s.charAt(i)-'a'] = true;
                }
                freq[s.charAt(i)-'a']--;
           }
        }
        while(!st.isEmpty())
        {
            str = st.pop()+str;
        }
        return str;

    }
}
