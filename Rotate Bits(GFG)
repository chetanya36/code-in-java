class Solution
{
    public static int Decimal(int Bits[])
    {
        int left = 0,k1 =1;
        for(int i=0;i<16;i++)
        {
             if(Bits[i] ==1)
               left = left + k1;
             k1 = k1*2;
        } 
        return left;
    }
    
    ArrayList<Integer> rotate(int N, int D)
    {
        ArrayList<Integer> list = new ArrayList<>();
        int Bits[] = new int[16];
        int k = 1,i=-1,temp=N;
        while(temp!=0)
        {
            if((temp&1) !=0)
            {
                ++i;
               Bits[(i+D)%16] = 1;
            } 
            else
              i++;
            temp = temp/2;
        }
        int left = Decimal(Bits);
        temp = N;
        i = -1;
        Arrays.fill(Bits,0);
        while(temp!=0)
        {
            if((temp&1) !=0)
            {
                ++i;
                D = D%16;
                int idx = Math.abs(16-D+i)%16;
                Bits[idx] = 1;
            }
            else
             i++;
            temp = temp/2;
        }
        int right = Decimal(Bits);
        list.add(left);
        list.add(right);
        return list;
    }
}
